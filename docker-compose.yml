version: '3'

services:
  users_db:
    build: ./db/users
    environment:
      MYSQL_DATABASE: users
      MYSQL_ALLOW_EMPTY_PASSWORD: true
    ports:
      - "3306:3306"
    volumes:
      - ./db/users:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root" ]
      timeout: 20s
      retries: 10

  items_db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_DATA_DIR: /data/db
      MONGO_INITDB_DAABASE: items
    ports:
      - "27017:27017"

  memcached:
    container_name: cache
    image: memcached:1.6.16

    ports:
      - "11211:11211"

  rabbit:
    container_name: rabbit
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5671:5671"
      - "5672:5672"
      - "8080:15672"
    volumes:
      - ./configs/rabbit/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./configs/rabbit/definitions.json:/etc/rabbitmq/definitions.json:ro
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 1s
      timeout: 5s
      retries: 30

  solr:
    container_name: solr
    image: solr
    ports:
      - "8983:8983"
    volumes:
      - ./configs/solr/managed-schema:/opt/solr/server/solr/configsets/_default/conf/managed-schema
    entrypoint:
      - docker-entrypoint.sh
      - solr-precreate
      - items
  items:
    build: services/items
    depends_on:
      items_db:
        condition: service_started
      memcached:
        condition: service_started
      rabbit:
        condition: service_healthy
    ports:
      - "8090:8090"

  users:
    build: services/users
    depends_on:
      users_db:
        condition: service_healthy
      rabbit:
        condition: service_healthy
    ports:
      - "9000:9000"

  messages:
    build: services/messages
    depends_on:
      users_db:
        condition: service_healthy
      rabbit:
        condition: service_healthy
    ports:
      - "9001:9001"

  busqueda:
    build: services/busqueda
    depends_on:
      solr:
        condition: service_started
      items:
        condition: service_started
    deploy:
      mode: replicated
      replicas: 2


  frontend:
    container_name: frontend
    build: ./frontend
    depends_on:
      busqueda:
        condition: service_started

    ports:
      - "3000:3000"


  lbbusqueda:
    build: configs/lb
    depends_on:
      busqueda:
        condition: service_started
    ports:
      - "80:80"
  worker_solr:
    build: services/worker_solr
    depends_on:
      busqueda:
        condition: service_started
      lbbusqueda:
        condition: service_started
